version: '3.7'

services:

  activemq:
    image: bwolf/activemq-prometheus
    deploy: 
      replicas: 1
    networks:
      - scaler
    ports:
      - "61616:61616"
      - "61613:61613"
      - "8161:8161"
      - "8080:8080"
    restart: unless-stopped

  helloworld:
    image: stack-demo
    deploy: 
      replicas: 1
    networks:
      - scaler
    ports:
      - "9090:8080"

  history-db:
    image: postgres:13-alpine
    deploy: 
      replicas: 1
    ports:
      - "7004:7004"
    command: -p 7004
    environment:
      - DEBUG=false
      - POSTGRES_USER=${SUPPLIER_USER_NAME}
      - POSTGRES_PASSWORD=${SUPPLIER_USER_PASSWORD}
      - POSTGRES_DB=${SUPPLIER_DATABASE_NAME}
    volumes:
      - history-db:/var/lib/postgresql/data
    restart: unless-stopped
  
  supplier-backend:
    image: supplier-backend
    ports:
      - "8284:8284"
    depends_on:
      - activemq
      - history-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_HOST=history-db
      - DATABASE_USER=${SCRIPT_USER_NAME}
      - DATABASE_PASSWORD=${SCRIPT_USER_PASSWORD}
      - DATABASE_NAME=${SUPPLIER_DATABASE_NAME}
      - DATABASE_PORT=${SUPPLIER_DATABASE_PORT}
      - AMQ_QUEUE_NAME=${AMQ_QUEUE_NAME}
      - AMQ_BROKER_HOSTNAME=activemq
      - AMQ_BROKER_PORT=${AMQ_TCP_PORT}
      - SERVER_PORT=${SUPPLIER_BACKEND_PORT}
      - "SPRING_PROFILES_ACTIVE=prod"

  scaler-proxy:
    image: scaler-proxy
    deploy: 
      replicas: 1
    networks:
      - scaler
    ports:
      - "9245:9245"
  
  scaler:
    image: thomasjpfan/docker-scaler:${TAG:-master}
    environment:
      - ALERTMANAGER_ADDRESS=http://alert-manager:9093
      - SERVER_PREFIX=/scaler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8743:8080"
      # - "8080:8080"
    networks:
      - scaler
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/scaler
        - com.df.port=8080
        # - com.df.port=8743
      placement:
        constraints: [node.role == manager]
  
  prometheus:
    image: prom/prometheus:v2.21.0
    deploy:
      replicas: 1
    ports:
      - 9000:9090
    depends_on:
      - alertmanager
    networks:
      - scaler
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  
  alertmanager:
    image: prom/alertmanager:v0.20.0
    deploy:
      replicas: 1
    ports:
      - 9093:9093
    networks:
      - scaler
    command:
      - '--log.level=debug'
      - '--config.file=/alertmanager.yml'
      - '--web.external-url=http://localhost:9093/'
    volumes:
      - ./alertmanager/alertmanager.yml:/alertmanager.yml

networks:
  scaler:
    external: true

volumes:
  prometheus-data:
  history-db: